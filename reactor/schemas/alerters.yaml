---
$schema: http://json-schema.org/draft-07/schema#
definitions:

  emails:
    oneOf:
      - type: string
        format: email
      - type: array
        items:
          type: string
          format: email

  urls:
    oneOf:
      - type: string
        format: url
      - type: array
        items:
          type: string
          format: url

type: object
additionalProperties: false


properties:

  # Debug Alerter
  debug:
    type: object
    additionalProperties: false
    properties:
      level:
        type: string
        convert_to: log_level
        enum: [DEBUG, INFO, WARNING, ERROR, CRITICAL]
        default: DEBUG

  # Test Alerter
  test:
    type: object
    additionalProperties: false
    properties:
      format:
        type: string
        enum: [json, plain]
        default: plain
      output:
        title: "Path to where output where be written, or stdout or stderr"
        type: string
        default: stdout

  # Command Alerter
  command:
    type: object
    additionaProperties: false
    required: [command]
    properties:
      command: {$ref: "common.yaml#/definitions/arrayOfStrings"}
      pipe_format:
        type: string
        enum: [json, plain]
        default: json
      fail_on_non_zero_exit:
        type: boolean
        default: false

  # Email Alerter
  email:
    type: object
    additionalProperties: false
    required: [to]

    properties:
      # Email to settings
      to: {$ref: "#/definitions/emails"}
      cc: {$ref: "#/definitions/emails"}
      bcc: {$ref: "#/definitions/emails"}
      from_field: {type: string}
      # Email from settings
      reply_to:
        type: string
        format: email
      notify: {$ref: "#/definitions/emails"}
      from_addr: {type: string}
      add_domain:
        type: string
        pattern: ^@(.*)$
      # Misc.
      email_format:
        type: string
        enum: [html]

      # SMTP settings
      smtp_host:
        type: string
        format: hostname
        default: localhost
      smtp_port:
        type: integer
        minimum: 0
      smtp_ssl: {type: boolean}
      smtp_auth_file: {type: string}
      smtp_key_file: {type: string}
      smtp_cert_file: {type: string}

  # Webhook Alerter
  webhook:
    type: object
    additionalProperties: false
    required: [verb, url]
    properties:
      url: {$ref: "#/definitions/urls"}
      verb:
        type: string
        enum: [GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH]
        default: POST
      proxy:
        type: string
        format: url
        examples:
          - "https://my.proxy:8080"
      dynamic_payload:
        type: object
        additionalProperties:
          type: string
        examples:
          - payload_key: match_body_key
      static_paylod: {type: object}
      headers:
        type: object
        additionalProperties:
          type: string
        examples:
          - Authorization: Bearer ey123...
            X-No-Ttl-Refresh: true
          - X-Api-Key: ey123...
      timeout:
        type: integer
        minimum: 0
        default: 10